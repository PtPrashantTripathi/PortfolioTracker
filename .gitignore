# Generated directories:
.nyc_output/
coverage/
FRONTEND/dist/
node_modules/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
dist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
package-lock.json

# Universal Git Ignore for Fullstack C/Node/Python/WASM

# OS and Editor Junk
.DS_Store
Thumbs.db
ehthumbs.db
*.swp
*.swo
*.swn
*.bak
*.tmp
*.temp
*.orig

# VSCode and JetBrains IDEs
.idea/
*.suo
*.ntvs*
*.njsproj
*.sln

# Editor History
.history/
.node_repl_history

# Node.js Related
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*
package-lock.json
yarn.lock
.pnpm-debug.log

# Build and Dependency Directories
build/
dist/
dist-ssr/
.cache/
jspm_packages/
bower_components/
typings/
.npm
.yarn-integrity

# Framework Specific
.next/
.nuxt/
.vuepress/dist
.serverless/
.fusebox/
.vercel/

# TypeScript
*.tsbuildinfo

# ESLint, Prettier
.eslintcache
.prettiercache

# Coverage
coverage/
.nyc_output/

# Test and Instrumentation
lib-cov/
.grunt/

# Python Related
__pycache__/
*.py[cod]
*.pyo
*.pyd
*.pyc
*.egg-info/
*.egg
.eggs/
.env
.venv/
venv/
pip-log.txt
pip-delete-this-directory.txt
.pytest_cache/
.tox/
.mypy_cache/
.pyre/

# C / C++ / Emscripten
*.o
*.obj
*.a
*.so
*.dylib
*.dll
*.lib
*.exe
*.out
*.app
*.hex
*.elf
*.bin
*.map
*.d

# Log Files
logs/
log/
*.log

# Process IDs
pids/
*.pid
*.pid.lock
*.seed

# Output of `npm pack` or other archives
*.tgz
*.tar.gz
*.zip

# Vite Env
tsconfig.tsbuildinfo
public/.well-known
